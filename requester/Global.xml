<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Global</name>
    </assembly>
    <members>
        <member name="T:Global.Common">
            <summary>
            Common tasks common to every project (including this one).
            </summary>
        </member>
        <member name="M:Global.Common.Random(System.Int32)">
            <summary>
            Generates a sequence of random strings based on the size required.
            </summary>
            <param name="size">The size of the string.</param>
            <returns>A random string.</returns>
        </member>
        <member name="M:Global.Common.Random(System.Int32,System.Boolean)">
            <summary>
            Generates a sequence of random strings based on the size required.
            </summary>
            <param name="size">The size of the string.</param>
            <param name="toLower">Specified if the returned string is set to upper or not.</param>
            <returns>A random string.</returns>
        </member>
        <member name="M:Global.Common.NumToEnum``1(System.Int32)">
            <summary>
            Converts the index value into the corresponding enum value.
            </summary>
            <typeparam name="T">The enum object.</typeparam>
            <param name="number">The index of the enum value.</param>
            <returns>The enum object value.</returns>
        </member>
        <member name="M:Global.Common.StringToEnum``1(System.String)">
            <summary>
            Converts the string value into the corresponding enum value.
            </summary>
            <typeparam name="T">The enum object.</typeparam>
            <param name="value">The string value of the corresponding enum value.</param>
            <returns>The enum object value.</returns>
        </member>
        <member name="M:Global.Common.StringToEnum``1(System.String,System.Boolean)">
            <summary>
            Converts the string value into the corresponding enum value.
            </summary>
            <typeparam name="T">The enum object.</typeparam>
            <param name="value">The string value of the corresponding enum value.</param>
            <param name="ignoreCase">Flag to choose to ignore case or not.</param>
            <returns>The enum object value.</returns>
        </member>
        <member name="T:Global.IO.PathHelper">
            <summary>
             Performs folder and files actions
            </summary>
        </member>
        <member name="M:Global.IO.PathHelper.ValidateEndOfPath(System.String)">
            <summary>
            Adds a "\" to the end of the directory if it does not exist.
            </summary>
            <param name="path">the directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Global.IO.PathHelper.GetFileNameOnly(System.String)">
            <summary>
            Gets the file name without extention.
            </summary>
            <param name="fullPath">The full file path.</param>
            <returns></returns>
        </member>
        <member name="M:Global.IO.PathHelper.GetFileNameWithExtension(System.String)">
            <summary>
            Returns the file name with extension.
            </summary>
            <param name="fullPath">the full file path.</param>
            <returns></returns>
        </member>
        <member name="M:Global.IO.PathHelper.ChangeFileExtension(System.String,System.String)">
            <summary>
            Changes the extension of the specified file.
            </summary>
            <param name="fullPath">the full file path.</param>
            <param name="extension">The new extension.</param>
            <returns></returns>
        </member>
        <member name="M:Global.IO.PathHelper.GetFileNameExtension(System.String)">
            <summary>
            Get the file extension (includes the dot).
            </summary>
            <param name="fullPath">The filename or full path.</param>
            <returns></returns>
        </member>
        <member name="M:Global.IO.PathHelper.ValidateStartOfExtension(System.String)">
            <summary>
            Returns a valid extension with a dot in the begining.
            </summary>
            <param name="extension">Extension to be validated.</param>
            <returns></returns>
        </member>
        <member name="M:Global.IO.PathHelper.GetFilePath(System.String)">
            <summary>
            Returns the path of the file.
            </summary>
            <param name="fullFilePath">The full path.</param>
            <returns></returns>
        </member>
        <member name="T:Global.Security.CryptoHelper">
            <summary>
             Handles cryptographic actions on strings (encrypt and decrypt).
            </summary>
        </member>
        <member name="F:Global.Security.CryptoHelper._textEncoding">
            <summary>
            Local variable for setting/getting the encoding of the text to be encrypted/decrypted.
            </summary>
        </member>
        <member name="F:Global.Security.CryptoHelper._encryptorEncoding">
            <summary>
            Local variable for setting/getting the encoding of the encryptor strings (initialization vector and secret key).
            </summary>
        </member>
        <member name="F:Global.Security.CryptoHelper._initializationVectorString">
            <summary>
            Local variable for setting/getting the initialization vector string when using the encryptor class.
            </summary>
        </member>
        <member name="F:Global.Security.CryptoHelper._secretKeyString">
            <summary>
            Local variable for setting/getting the secret key string when using the encryptor class.
            </summary>
        </member>
        <member name="M:Global.Security.CryptoHelper.Encrypt(System.String)">
            <summary>
            Encrypts a string using the Rijndael crypto algorithm.
            </summary>
            <param name="toEncrypt">The specified string to be encrypted.</param>
            <returns>A Base64 encrypted string.</returns>
        </member>
        <member name="M:Global.Security.CryptoHelper.Encrypt(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>
             Encrypts a string using the Rijndael crypto algorithm.
             </summary>
             <param name="toEncrypt">The specified string to be encrypted.</param>
            <param name="keySize">The key size.</param>
            <param name="blockSize">The block size.</param>
             <returns>A Base64 encrypted string.</returns>
        </member>
        <member name="M:Global.Security.CryptoHelper.Encrypt(System.String,System.Byte[]@)">
            <summary>
            Encrypts a string using the Rijndael crypto algorithm.
            </summary>
            <param name="toEncrypt">The specified string to be encrypted.</param>
            <param name="secretKey">The secret key byte array to be used when encrypting the string.</param>
            <returns>A Base64 encrypted string.</returns>
        </member>
        <member name="M:Global.Security.CryptoHelper.Encrypt(System.String,System.Byte[]@,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>
             Encrypts a string using the Rijndael crypto algorithm.
             </summary>
             <param name="toEncrypt">The specified string to be encrypted.</param>
             <param name="secretKey">The secret key byte array to be used when encrypting the string.</param>
            <param name="keySize">The key size.</param>
            <param name="blockSize">The block size.</param>
             <returns>A Base64 encrypted string.</returns>
        </member>
        <member name="M:Global.Security.CryptoHelper.Decrypt(System.String)">
            <summary>
             Decrypts a string using the Rijndael crypto algorithm. It will use the SecretKeyString property to retrieve the secretKey byte array. 
             If the SecretKeyString is not set it will throw an exception.
            </summary>
             <param name="toDescrypt">A Base64 string to be decrypted.</param>
             <returns>The decrypted string of the provided encrypted string.</returns>
        </member>
        <member name="M:Global.Security.CryptoHelper.Decrypt(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>
             Decrypts a string using the Rijndael crypto algorithm.
             </summary>
             <param name="toDescrypt">A Base64 string to be decrypted.</param>
            <param name="keySize">The key size.</param>
            <param name="blockSize">The block size.</param>
             <returns>The decrypted string of the provided encrypted string.</returns>
        </member>
        <member name="M:Global.Security.CryptoHelper.Decrypt(System.String,System.Byte[])">
            <summary>
            Decrypts a string using the Rijndael crypto algorithm.
            </summary>
            <param name="toDescrypt">A Base64 string to be decrypted.</param>
            <param name="secretKey">The secret key to be used when decrypting the string.</param>
            <returns>The decrypted string of the provided encrypted string.</returns>
        </member>
        <member name="M:Global.Security.CryptoHelper.Decrypt(System.String,System.Byte[],System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>
             Decrypts a string using the Rijndael crypto algorithm.
             </summary>
             <param name="toDescrypt">A Base64 string to be decrypted.</param>
             <param name="secretKey">The secret key to be used when decrypting the string.</param>
            <param name="keySize">The key size.</param>
            <param name="blockSize">The block size.</param>
             <returns>The decrypted string of the provided encrypted string.</returns>
        </member>
        <member name="M:Global.Security.CryptoHelper.Create(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Creates an instance of the rijndael class.
            </summary>
            <param name="keySize">The key size.</param>
            <param name="blockSize">The block size.</param>
            <returns>An instance of the rijndael class.</returns>
        </member>
        <member name="P:Global.Security.CryptoHelper.TextEncoding">
            <summary>
            Sets and gets the encoding of the text to be encrypted/decrypted. Defaults to UTF8.
            </summary>
        </member>
        <member name="P:Global.Security.CryptoHelper.EncryptorEncoding">
            <summary>
            Sets and gets the encoding of the encryptor strings (initialization vector and secret key). Defaults to ASCII.
            </summary>
        </member>
        <member name="P:Global.Security.CryptoHelper.InitializationVectorString">
            <summary>
            Sets and gets the initialization vector string when using the encryptor class. A default value is set if none is provided.
            </summary>
        </member>
        <member name="P:Global.Security.CryptoHelper.SecretKeyString">
            <summary>
            Sets and gets the secret key string when using the encryptor class. A random value is set if none is provided.
            </summary>
        </member>
        <member name="T:Global.Http.UrlBuilder">
            <summary>
             Helper class to build a url string.
            </summary>
        </member>
        <member name="M:Global.Http.UrlBuilder.BaseUrl(System.String)">
            <summary>
             Defines the base url.
            </summary>
            <param name="baseUrl">The base url.</param>
            <returns>The same instance of the UrlBuilder.</returns>
        </member>
        <member name="M:Global.Http.UrlBuilder.Parameters(System.Action{Global.Http.UrlParameters})">
            <summary>
             Defines the url Parameters.
            </summary>
            <param name="urlParameters">The url Parameters.</param>
            <returns>The same instance of the UrlBuilder.</returns>
        </member>
        <member name="M:Global.Http.UrlBuilder.Build">
            <summary>
             Builds the the final url.
            </summary>
            <returns>The final url string.</returns>
        </member>
        <member name="T:Global.Serialization.XmlSerializerHelper">
            <summary>
             Class to be used when performing serialization tasks.
            </summary>
        </member>
        <member name="M:Global.Serialization.XmlSerializerHelper.FromXmlFile``1(System.String)">
             <summary>
             Deserializes a file into an object.
             </summary>
             <param name="xmlFilePath">The content to be serialized.</param>
            <typeparam name="T">The object type to be serialized/deserialized.</typeparam>
             <returns>The object serialized from the file.</returns>
        </member>
        <member name="M:Global.Serialization.XmlSerializerHelper.FromXmlString``1(System.String)">
             <summary>
             Deserializes a string into an object.
             </summary>
             <param name="xmlString">The content to be serialized.</param>
            <typeparam name="T">The object type to be serialized/deserialized.</typeparam>
             <returns>The object serialized from the file.</returns>
        </member>
        <member name="M:Global.Serialization.XmlSerializerHelper.ToXmlFile``1(System.String,``0)">
             <summary>
             Serializes ans object to a file.
             </summary>
             <param name="xmlFilePath">The file where the serialized object should go to.</param>
            <typeparam name="T">The object type to be serialized/deserialized.</typeparam>
             <param name="entity">The objkect to be serialized.</param>
        </member>
        <member name="M:Global.Serialization.XmlSerializerHelper.ToXmlFile``1(System.String,``0,System.String,System.String,System.String,System.String)">
             <summary>
             Serializes an object to a file.
             </summary>
             <param name="xmlFilePath">The file where the serialized object should go to.</param>
             <param name="entity">The object to be serialized.</param>
             <param name="docTypeName"></param>
             <param name="docTypePubId"></param>
             <param name="docTypeSysId"></param>
             <param name="docTypeSubSet"></param>
            <typeparam name="T">The object type to be serialized/deserialized.</typeparam>
        </member>
        <member name="M:Global.Serialization.XmlSerializerHelper.ToXmlString``1(``0)">
             <summary>
             Serializes an object to a string.
             </summary>
             <param name="entity">The object to be serialized.</param>
            <typeparam name="T">The object type to be serialized/deserialized.</typeparam>
             <returns>The serialized object string.</returns>
        </member>
        <member name="M:Global.Serialization.XmlSerializerHelper.ToXmlString``1(``0,System.String,System.String,System.String,System.String)">
             <summary>
             Serializes an object to a string.
             </summary>
             <param name="entity">The object to be serialized.</param>
             <param name="docTypeName"></param>
             <param name="docTypePubId"></param>
             <param name="docTypeSysId"></param>
             <param name="docTypeSubSet"></param>
            <typeparam name="T">The object type to be serialized/deserialized.</typeparam>
             <returns>The serialized object string.</returns>
        </member>
        <member name="M:Global.Serialization.XmlSerializerHelper.GetNamespace(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
             Gets the namespaces from a dictionary.
            </summary>
            <param name="prefixNs">A collection of namespace prefixes to be added.</param>
            <returns>Xml serializer namespaces.</returns>
        </member>
        <member name="M:Global.Serialization.XmlSerializerHelper.GetEmptyNamespace">
            <summary>
             Gets a collection of empty namespaces.
            </summary>
            <returns>Xml serializer namespaces.</returns>
        </member>
        <member name="M:Global.Serialization.XmlSerializerHelper.ByteArrayToString(System.Text.Encoding,System.Byte[])">
            <summary>
            To convert a Byte Array of Unicode values to a complete String.
            </summary>
            <param name="encoding">The encoding to be applied in the convertion.</param>
            <param name="characters">Unicode Byte Array to be converted to String</param>
            <returns>String converted from Unicode Byte Array</returns>
        </member>
        <member name="T:Global.Http.Http">
            <summary>
            Handles http requests.
            </summary>
        </member>
        <member name="M:Global.Http.Http.SetTranferEncoding(System.String)">
            <summary>
            Specifies the transfer-encoding header.
            </summary>
            <param name="transferEncoding">The header value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetReferer(System.String)">
            <summary>
            Specifies the referer header.
            </summary>
            <param name="referer">The header value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetConnectionLimit(System.Int32)">
            <summary>
            Specifies the connection limit.
            </summary>
            <param name="limit">The connection limit value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetRange(System.Int32)">
            <summary>
            Specifies the range header.
            </summary>
            <param name="range">The header value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetRange(System.Int32,System.Int32)">
            <summary>
            Specifies the range header.
            </summary>
            <param name="from">The start range value.</param>
            <param name="to">The end range value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetIfModifiedSince(System.DateTime)">
            <summary>
            Specifies th if modified since header.
            </summary>
            <param name="ifModifiedSince">The if modified since value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetExpect(System.String)">
            <summary>
            Specifies the expect header.
            </summary>
            <param name="expect">The expect value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetConnection(System.String)">
            <summary>
            Specifies the connection header.
            </summary>
            <param name="connection">The connection value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetAccept(System.String)">
            <summary>
            Specifies the accept header.
            </summary>
            <param name="accept">The accept value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetMethod(System.String)">
            <summary>
            Specifies the request method/verb.
            </summary>
            <param name="method">The method value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetRequestEncoding(System.Text.Encoding)">
            <summary>
            Specifies the request encoding.
            </summary>
            <param name="requestEncoding">The request encoding value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetPayload(System.String)">
            <summary>
            Specifies the payload to use with the request. Automatically overrides the ContentSize property.
            </summary>
            <param name="payload">The payload value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetPayload``1(``0)">
            <summary>
            Specifies the payload to use with the request. Automatically overrides the ContentSize property.
            </summary>
            <typeparam name="TPayload">The entity type of payload.</typeparam>
            <param name="payload">The payload entity.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetPayload``1(``0,System.Text.Encoding)">
            <summary>
            Specifies the payload to use with the request. Automatically overrides the ContentSize property.
            </summary>
            <typeparam name="TPayload">The entity type of payload.</typeparam>
            <param name="payload">The payload entity.</param>
            <param name="requestEncoding">The value to encode the payload.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetPayload``1(``0,Global.Http.Format)">
            <summary>
            Specifies the payload to use with the request. Automatically overrides the ContentSize property.
            </summary>
            <typeparam name="TPayload">The entity type of payload.</typeparam>
            <param name="payload">The payload entity.</param>
            <param name="format">The format of the payload (xml or json).</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetPayload``1(``0,System.Text.Encoding,Global.Http.Format)">
            <summary>
            Specifies the payload to use with the request. Automatically overrides the ContentSize property.
            </summary>
            <typeparam name="TPayload">The entity type of payload.</typeparam>
            <param name="payload">The payload entity.</param>
            <param name="requestEncoding">The value to encode the payload.</param>
            <param name="format">The format of the payload (xml or json).</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetPayload(System.String,System.Text.Encoding)">
            <summary>
            Specifies the payload to use with the request. Automatically overrides the ContentSize property.
            </summary>
            <param name="payload">The payload value.</param>
            <param name="requestEncoding">The value to encode the payload.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetContentType(System.String)">
            <summary>
            Specifies the content type header.
            </summary>
            <param name="contentType">The content type header value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetUserAgent(System.String)">
            <summary>
            Specifies the user agent header.
            </summary>
            <param name="userAgent">The user agent value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetKeepAlive(System.Boolean)">
            <summary>
            Specifies the keep alive header.
            </summary>
            <param name="keepAlive">The specified keep alive.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetTimeout(System.Int32)">
            <summary>
            Specifies the timeout header.
            </summary>
            <param name="timeout">The specified timeout.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetHeaders(System.Func{Global.Http.Header,Global.Http.Header})">
            <summary>
            Specifies a collection of header values to use with the request.
            </summary>
            <param name="headers">Adds custom headers to the request.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetCredentials(System.Net.ICredentials)">
            <summary>
            Specifies the credentials to use with the request.
            </summary>
            <param name="credentials">The specified credentials</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetCredentials(System.String,System.String)">
            <summary>
            Specifies the credentials to use with the request.
            </summary>
            <param name="username">The specfied username.</param>
            <param name="password">The specified password.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetCredentials(System.String,System.String,System.String)">
            <summary>
            Specifies the credentials to use with the request.
            </summary>
            <param name="username">The specified username.</param>
            <param name="password">The specifies password.</param>
            <param name="domain">The specified domain.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetProxy(System.Func{Global.Http.ProxySettings,Global.Http.ProxySettings})">
            <summary>
            Specifies the proxy for the request.
            </summary>
            <param name="webProxy">Add proxy configuration.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetProxy(System.Net.IWebProxy)">
            <summary>
            Specifies the proxy for the request.
            </summary>
            <param name="webProxy">The proxy configuration entity.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.SetResponseEncoding(System.Text.Encoding)">
            <summary>
            Specifies what encoding to use for the response.
            </summary>
            <param name="responseEncoding">The specified encoding.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Http.#ctor(System.String)">
            <summary>
            Initializes the http helper class.
            </summary>
            <param name="url">The request url.</param>
        </member>
        <member name="M:Global.Http.Http.#ctor(System.Func{Global.Http.UrlBuilder,Global.Http.UrlBuilder})">
            <summary>
            Initializes the Http class.
            </summary>
            <param name="builder">The function to build the url.</param>
        </member>
        <member name="M:Global.Http.Http.DoRequest``1(Global.Http.Format)">
            <summary>
            Sends a specified request.
            </summary>
            <typeparam name="TReturn">The entity type of the response.</typeparam>
            <param name="format">The format of the response (xml or json).</param>
            <returns>The response entity.</returns>
        </member>
        <member name="M:Global.Http.Http.DoRequest">
            <summary>
            Sends a specified request.
            </summary>
            <returns>A string containing the response.</returns>
        </member>
        <member name="P:Global.Http.Http.HttpStatus">
            <summary>
            Specified the http status of the http response.
            </summary>
        </member>
        <member name="P:Global.Http.Http.HttpStatusCode">
            <summary>
            Specifies the http status code of the http response.
            </summary>
        </member>
        <member name="P:Global.Http.Http.HttpStatusDescription">
            <summary>
            Specifies the http status description of the http response.
            </summary>
        </member>
        <member name="P:Global.Http.Http.TranferEncoding">
            <summary>
            Specifies the transfer-encoding header.
            </summary>
        </member>
        <member name="P:Global.Http.Http.Referer">
            <summary>
            Specifies the referer header.
            </summary>
        </member>
        <member name="P:Global.Http.Http.ConnectionLimit">
            <summary>
            Specifies the connection limit.
            </summary>
        </member>
        <member name="P:Global.Http.Http.Range">
            <summary>
            Specifies the range header.
            </summary>
        </member>
        <member name="P:Global.Http.Http.RangeFromTo">
            <summary>
            Specifies the range header.
            </summary>
        </member>
        <member name="P:Global.Http.Http.IfModifiedSince">
            <summary>
            Specifies th if modified since header.
            </summary>
        </member>
        <member name="P:Global.Http.Http.Expect">
            <summary>
            Specifies the expect header.
            </summary>
        </member>
        <member name="P:Global.Http.Http.Connection">
            <summary>
            Specifies the connection header.
            </summary>
        </member>
        <member name="P:Global.Http.Http.Accept">
            <summary>
            Specifies the accept header.
            </summary>
        </member>
        <member name="P:Global.Http.Http.Method">
            <summary>
            Specifies the request method/verb.
            </summary>
        </member>
        <member name="P:Global.Http.Http.RequestEncoding">
            <summary>
            Specifies the request encoding.
            </summary>
        </member>
        <member name="P:Global.Http.Http.Payload">
            <summary>
            Specifies the payload to use with the request. Automatically overrides the ContentSize property.
            </summary>
        </member>
        <member name="P:Global.Http.Http.ContentType">
            <summary>
            Specifies the content type header.
            </summary>
        </member>
        <member name="P:Global.Http.Http.UserAgent">
            <summary>
            Specifies the user agent header.
            </summary>
        </member>
        <member name="P:Global.Http.Http.KeepAlive">
            <summary>
            Specifies the keep alive header.
            </summary>
        </member>
        <member name="P:Global.Http.Http.Timeout">
            <summary>
            Specifies the timeout header.
            </summary>
        </member>
        <member name="P:Global.Http.Http.Headers">
            <summary>
            Specifies a collection of header values to use with the request.
            </summary>
        </member>
        <member name="P:Global.Http.Http.Credentials">
            <summary>
            Specifies the credentials to use with the request.
            </summary>
        </member>
        <member name="P:Global.Http.Http.Proxy">
            <summary>
            Specifies the proxy for the request.
            </summary>
        </member>
        <member name="P:Global.Http.Http.ResponseEncoding">
            <summary>
            Specifies what encoding to use for the response.
            </summary>
        </member>
        <member name="T:Global.Config.ConfigHelper">
            <summary>
             Performs current actions with the configuration files.
            </summary>
        </member>
        <member name="M:Global.Config.ConfigHelper.GetAppSetting(System.String)">
            <summary>
            Gets a specified setting in the AppSettings section.
            </summary>
            <param name="key">A name identifying the setting value.</param>
            <returns></returns>
        </member>
        <member name="M:Global.Config.ConfigHelper.GetAppSetting(System.Int32)">
            <summary>
            Gets a specified setting in the AppSettings section.
            </summary>
            <param name="index">The index of the setting value.</param>
            <returns></returns>
        </member>
        <member name="M:Global.Config.ConfigHelper.GetConnectionString(System.String)">
            <summary>
            Gets a specified connection string in the ConnectionsStrings section.
            </summary>
            <param name="name">A name identifying the connection string value.</param>
            <returns></returns>
        </member>
        <member name="M:Global.Config.ConfigHelper.GetConnectionString(System.Int32)">
            <summary>
            Gets a specified connection string in the ConnectionsStrings section.
            </summary>
            <param name="index">The index of the setting value.</param>
            <returns></returns>
        </member>
        <member name="M:Global.Config.ConfigHelper.LoadConfigurationSection``1(System.String)">
            <summary>
             Loads a specified configuration section.
            </summary>
            <param name="sectionName">The configuration section name.</param>
            <typeparam name="TReturn">The configuration section object class.</typeparam>
            <returns>The configuration section object.</returns>
        </member>
        <member name="T:Global.Global.MailAddresses">
            <summary>
             A collection of mail addresses.
            </summary>
        </member>
        <member name="M:Global.Global.MailAddresses.Add(System.String)">
            <summary>
             Adds a new address to the address collection.
            </summary>
            <param name="mail">The specified sender mail.</param>
            <returns>The same instance of the mail address class.</returns>
        </member>
        <member name="M:Global.Global.MailAddresses.Add(System.String,System.String)">
            <summary>
             Adds a new address to the address collection.
            </summary>
            <param name="displayName">The name of the sender.</param>
            <param name="mail">The specified sender mail.</param>
            <returns>The same instance of the mail address class.</returns>
        </member>
        <member name="M:Global.Global.MailAddresses.Add(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
             Adds a new address to the address collection.
            </summary>
            <param name="mails">A list of emails.</param>
            <returns>The same instance of the mail address class.</returns>
        </member>
        <member name="M:Global.Global.MailAddresses.Add(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
             Adds a new address to the address collection.
            </summary>
            <param name="contacts">A list of contacts.</param>
            <returns>The same instance of the mail address class.</returns>
        </member>
        <member name="T:Global.IO.IOHelper">
            <summary>
             Performs input/output actions.
            </summary>
        </member>
        <member name="M:Global.IO.IOHelper.GetFileLastModified(System.String)">
            <summary>
            Get the last modified date of the specified file.
            </summary>
            <param name="filePath">The full file path.</param>
            <returns>The last modified DateTime.</returns>
        </member>
        <member name="M:Global.IO.IOHelper.GetFolderLastModified(System.String)">
            <summary>
            Get the last modified date of the specified folder.
            </summary>
            <param name="folderPath">The full folder path.</param>
            <returns>The last modified DateTime.</returns>
        </member>
        <member name="M:Global.IO.IOHelper.GetFileContent(System.String)">
            <summary>
            Gets the file content.
            </summary>
            <param name="filePath">The full file path.</param>
            <returns>A string containing the file contents.</returns>
        </member>
        <member name="M:Global.IO.IOHelper.MoveFile(System.String,System.String,System.Boolean)">
            <summary>
            Moves a file to another destination.
            </summary>
            <param name="fileToMove">The file to be moved.</param>
            <param name="destinationFolder">The destination folder to where the file should be moved.</param>
            <param name="createDestinationFolder">Defines if the destination folder must be created if it doesn't exist.</param>
            <returns>A boolean indicating that the move was successful.</returns>
        </member>
        <member name="M:Global.IO.IOHelper.MoveFolder(System.String,System.String,System.Boolean)">
            <summary>
            Moves a folder to another destination.
            </summary>
            <param name="folderToMove">The folder to be moved.</param>
            <param name="destinationFolder">The destination folder to where the folder should be moved.</param>
            <param name="createDestinationFolder">Defines if the destination folder must be created if it doesn't exist.</param>
            <returns>A boolean indicating that the move was successful.</returns>
        </member>
        <member name="M:Global.IO.IOHelper.CopyFolder(System.String,System.String,System.Boolean)">
            <summary>
            Moves a folder to another destination.
            </summary>
            <param name="folderToMove">The folder to be moved.</param>
            <param name="destinationFolder">The destination folder to where the folder should be moved.</param>
            <param name="createDestinationFolder">Defines if the destination folder must be created if it doesn't exist.</param>
            <returns>A boolean indicating that the move was successful.</returns>
        </member>
        <member name="M:Global.IO.IOHelper.CopyDirectory(System.String,System.String,System.Boolean)">
            <summary>
            Copies a directory from one place to another.
            </summary>
            <param name="source">The source folder.</param>
            <param name="destination">The destination folder.</param>
            <param name="overwrite">A flag indicating if it is to overwrite the folder if it exists.</param>
            <exception cref="T:System.IO.DirectoryNotFoundException">Throws an exception if the copy is not successful.</exception>
        </member>
        <member name="M:Global.IO.IOHelper.CopyFile(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Copies a folder to another destination.
            </summary>
            <param name="fileToCopy">The folder to be copied.</param>
            <param name="destinationFolder">The destination folder to where the folder should be copied to.</param>
            <param name="createDestinationFolder">Defines if the destination folder must be created if it doesn't exist.</param>
            <param name="overwrite">Defines if the copy will overwrite existing files in the destination folder.</param>
            <returns>A boolean indicating that the copy was successful.</returns>
        </member>
        <member name="T:Global.Serialization.DataContractSerializerHelper">
            <summary>
            Class to handle serialization of objects using DataContractSerializtion.
            </summary>
        </member>
        <member name="M:Global.Serialization.DataContractSerializerHelper.FromXmlFile``1(System.String)">
            <summary>
            Deserializes the file to the specified object.
            </summary>
            <param name="filePath">The path of the file to be serialized.</param>
            <typeparam name="TType">The object to be handled.</typeparam>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Global.Serialization.DataContractSerializerHelper.FromJsonFile``1(System.String,System.Text.Encoding)">
            <summary>
            Deserializes the file to the specified object.
            </summary>
            <param name="filePath">The path of the file to be serialized.</param>
            <param name="encoding">The encoding used to deserialize the string object.</param>
            <typeparam name="TType">The object to be handled.</typeparam>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Global.Serialization.DataContractSerializerHelper.FromXmlString``1(System.String)">
            <summary>
            Deserializes the string to a specified object.
            </summary>
            <param name="objectString">The object string.</param>
            <typeparam name="TType">The object to be handled.</typeparam>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Global.Serialization.DataContractSerializerHelper.FromJsonString``1(System.String)">
            <summary>
            Deserializes a json string to the specified object.
            </summary>
            <param name="objectString">The object as a json string.</param>
            <typeparam name="TType">The object to be handled.</typeparam>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Global.Serialization.DataContractSerializerHelper.FromJsonString``1(System.String,System.Text.Encoding)">
            <summary>
            Deserializes a json string to the specified object.
            </summary>
            <param name="objectString">The object as a json string.</param>
            <param name="encoding">The encoding used to deserialize the string to the specified object type.</param>
            <typeparam name="TType">The object to be handled.</typeparam>
            <returns>The deserialized object.</returns>
        </member>
        <member name="M:Global.Serialization.DataContractSerializerHelper.ToXmlFile``1(System.String,``0)">
            <summary>
            Serialized a specified object to a file.
            </summary>
            <param name="filePath">The path where the serialized object must be stored.</param>
            <typeparam name="TType">The object to be handled.</typeparam>
            <param name="entity">The entity to be serialized.</param>
        </member>
        <member name="M:Global.Serialization.DataContractSerializerHelper.ToXmlFile``1(System.String,``0,System.Text.Encoding)">
            <summary>
            Serialized a specified object to a file.
            </summary>
            <param name="filePath">The path where the serialized object must be stored.</param>
            <param name="entity">The entity to be serialized.</param>
            <typeparam name="TType">The object to be handled.</typeparam>
            <param name="encoding">The encoding to used in the serialization precess.</param>
        </member>
        <member name="M:Global.Serialization.DataContractSerializerHelper.ToJsonFile``1(System.String,``0,System.Text.Encoding)">
            <summary>
            Serialized a specified object to a file.
            </summary>
            <param name="filePath">The path where the serialized object must be stored.</param>
            <param name="entity">The entity to be serialized.</param>
            <typeparam name="TType">The object to be handled.</typeparam>
            <param name="encoding">The encoding to used in the serialization precess.</param>
        </member>
        <member name="M:Global.Serialization.DataContractSerializerHelper.ToXmlString``1(``0)">
            <summary>
            Serializes the specified object to a string.
            </summary>
            <param name="entity">The object to be serialized.</param>
            <typeparam name="TType">The object to be handled.</typeparam>
            <returns>The serialized string.</returns>
        </member>
        <member name="M:Global.Serialization.DataContractSerializerHelper.ToXmlString``1(``0,System.Text.Encoding)">
            <summary>
            Serializes the specified object to a string.
            </summary>
            <param name="entity">The object to be serialized.</param>
            <param name="encoding">The encoding to be used in the serialization preocess.</param>
            <typeparam name="TType">The object to be handled.</typeparam>
            <returns>The serialized string.</returns>
        </member>
        <member name="M:Global.Serialization.DataContractSerializerHelper.ToJsonString``1(``0)">
            <summary>
            Serializes the specified object to a json string.
            </summary>
            <param name="entity">The object to be serialized.</param>
            <typeparam name="TType">The object to be handled.</typeparam>
            <returns>The serialized object as a string.</returns>
        </member>
        <member name="M:Global.Serialization.DataContractSerializerHelper.ToJsonString``1(``0,System.Text.Encoding)">
            <summary>
            Serializes the specified object to a json string.
            </summary>
            <param name="entity">The object to be serialized.</param>
            <param name="encoding">The specified encoding to be used when serializing.</param>
            <typeparam name="TType">The object to be handled.</typeparam>
            <returns>The serialized object as a string.</returns>
        </member>
        <member name="T:Global.Security.HashingHelper">
            <summary>
            Provide hashing features 
            </summary>
        </member>
        <member name="M:Global.Security.HashingHelper.Encrpyt(System.String,System.Byte[]@)">
            <summary>
            Encrypt an input string 
            </summary>
            <param name="input">the input string to be encrpty</param>
            <param name="signature">the private key signature</param>
            <returns>A Base 64 encrypted string or empty if can't encrpyt</returns>
        </member>
        <member name="M:Global.Security.HashingHelper.Decrypt(System.String,System.Byte[])">
            <summary>
            Decrypt a base 64 string hash
            </summary>
            <param name="hash">The encrypted hash</param>
            <param name="signature">the private key signature</param>
            <returns>If is valid return decrypt hash, else return empty string</returns>
        </member>
        <member name="T:Global.Http.UrlParameters">
            <summary>
             A collection of url Parameters.
            </summary>
        </member>
        <member name="F:Global.Http.UrlParameters.Parameters">
            <summary>
             A dictionary os parameter name/value pair.
            </summary>
        </member>
        <member name="M:Global.Http.UrlParameters.Add(System.String,System.Object)">
            <summary>
             Adds a new querystring parameter to the Parameters collection.
            </summary>
            <param name="name">The name of parameter.</param>
            <param name="value">The value of the parameter value.</param>
            <returns>The same instance of the parameter value.</returns>
        </member>
        <member name="M:Global.Http.UrlParameters.Add(System.String,System.Object,System.Boolean)">
            <summary>
             Adds a new querystring parameter to the Parameters collection.
            </summary>
            <param name="name">The name of parameter.</param>
            <param name="value">The value of the parameter value.</param>
            <param name="allowNulls">Specifies if the it will allow null values. If this value is false and the value provided is null then and empty string will be used.</param>
            <returns>The same instance of the parameter value.</returns>
        </member>
        <member name="T:Global.Security.EncryptDecrypt">
            <summary>
            
            </summary>
        </member>
        <member name="T:Global.Security.SecurityHelper">
            <summary>
             Provides some basic security features for a web application.
            </summary>
        </member>
        <member name="M:Global.Security.SecurityHelper.CreateSalt">
            <summary>
             Creates a password salt. The default size is 32.
            </summary>
            <returns>The salt to be used with the password.</returns>
        </member>
        <member name="M:Global.Security.SecurityHelper.CreateSalt(System.Int32)">
            <summary>
             Creates a password salt.
            </summary>
            <param name="size">The size of the byte array.</param>
            <returns>The salt to be used with the password.</returns>
        </member>
        <member name="M:Global.Security.SecurityHelper.CreatePasswordHash(System.String,System.String)">
            <summary>
             Hashes the password. SHA1 is the default password format.
            </summary>
            <param name="password">The specified password.</param>
            <param name="passwordSalt">The specified password salt.</param>
            <returns></returns>
        </member>
        <member name="M:Global.Security.SecurityHelper.CreatePasswordHash(System.String,System.String,System.String)">
            <summary>
             Hashes the password.
            </summary>
            <param name="password">The specified password.</param>
            <param name="passwordSalt">The specified password salt.</param>
            <param name="passwordFormat">The specified password format. Can be SHA1 or MD5.</param>
            <returns></returns>
        </member>
        <member name="T:Global.Http.Format">
            <summary>
            Specifies the format of the request or response.
            </summary>
        </member>
        <member name="F:Global.Http.Format.Xml">
            <summary>
            Sepecifies the request or response as xml.
            </summary>
        </member>
        <member name="F:Global.Http.Format.Json">
            <summary>
            Specifies the reqest or response as json.
            </summary>
        </member>
        <member name="T:Global.Http.ProxySettings">
            <summary>
            Proxy settings used when making a request.
            </summary>
        </member>
        <member name="M:Global.Http.ProxySettings.AddBypassRule(System.String)">
            <summary>
            Sets the proxy bypass rules. Add as many as needed.
            </summary>
            <param name="rule">The specified rule.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.ProxySettings.BypassLocally">
            <summary>
            Flag to bypass local request.
            </summary>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.ProxySettings.Address(System.String)">
            <summary>
            Sets the address url.
            </summary>
            <param name="url">The specified url.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.ProxySettings.Address(System.Uri)">
            <summary>
            Sets the address uri.
            </summary>
            <param name="uri">The specified uri.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.ProxySettings.Credentials(System.String,System.String)">
            <summary>
            Sets the credentials to be used in the proxy. By default it uses the NetworkCredential class.
            </summary>
            <param name="username">The specified username.</param>
            <param name="password">The specified password.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.ProxySettings.Credentials(System.String,System.String,System.String)">
            <summary>
            Sets the credentials to be used in the proxy. By default it uses the NetworkCredential class.
            </summary>
            <param name="username">The specified username.</param>
            <param name="password">The specified password.</param>
            <param name="domain">The specified domain,</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.ProxySettings.Credentials(System.Net.ICredentials)">
            <summary>
            Sets the credentials to be used in the proxy.
            </summary>
            <param name="credentials">The specified credentials object.</param>
            <returns>Itself.</returns>
        </member>
        <member name="P:Global.Http.ProxySettings.WebProxy">
            <summary>
            The IWebProxy class.
            </summary>
        </member>
        <member name="T:Global.Http.Header">
            <summary>
            Sets the headers to be used in the request.
            </summary>
        </member>
        <member name="M:Global.Http.Header.AddRequestHeader(System.String)">
            <summary>
            Sets the request header. Add as many as needed.
            </summary>
            <param name="header">The header.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Header.AddRequestHeader(System.String,System.String)">
            <summary>
            Sets the request header. Add as many as needed.
            </summary>
            <param name="name">The header name.</param>
            <param name="value">The header value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Header.AddRequestHeader(System.Net.HttpRequestHeader,System.String)">
            <summary>
            Sets the request header. Add as many as needed.
            </summary>
            <param name="header">The header name.</param>
            <param name="value">The header value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="M:Global.Http.Header.AddResponseHeader(System.Net.HttpResponseHeader,System.String)">
            <summary>
            Sets the response headers. Add as many as neesed.
            </summary>
            <param name="header">The header name.</param>
            <param name="value">The header value.</param>
            <returns>Itself.</returns>
        </member>
        <member name="P:Global.Http.Header.Collection">
            <summary>
            The header collection.
            </summary>
        </member>
        <member name="T:Global.Http.Rest">
            <summary>
            A collection of methods that allows performing tasks on REST services such as GET, POST, PUT and DELETE operations.
            </summary>
        </member>
        <member name="M:Global.Http.Rest.GetInt(System.String)">
            <summary>
            Gets a parameter from the request and parse it to int.
            </summary>
            <param name="parmName">The request parameter name.</param>
            <returns>The parsed int value.</returns>
        </member>
        <member name="M:Global.Http.Rest.GetInt(System.String,System.Int32)">
            <summary>
            Gets a parameter from the request and parse it to int.
            </summary>
            <param name="parmName">The request parameter name.</param>
            <param name="defaultValue">The default value in case the parse gives an error.</param>
            <returns>The parsed int value.</returns>
        </member>
        <member name="M:Global.Http.Rest.GetRequiredInt(System.String)">
            <summary>
            Gets a required parameter from the request and parse it to int.
            </summary>
            <param name="parmName">The request parameter name.</param>
            <returns>The parsed int value or an exception if the parameter does not exist.</returns>
        </member>
        <member name="M:Global.Http.Rest.GetInt(System.String,System.Int32,System.Boolean)">
            <summary>
            Gets a parameter from the request and parse it to int.
            </summary>
            <param name="parmName">The request parameter name.</param>
            <param name="defaultValue">The default value in case the parse gives an error.</param>
            <param name="isRequired">Defines if the parameter is required.</param>
            <returns>The parsed int value or an exception if the parameter is required.</returns>
        </member>
        <member name="M:Global.Http.Rest.GetBool(System.String)">
            <summary>
            Gets a parameter from the request and parse it to bool.
            </summary>
            <param name="parmName">The request parameter name.</param>
            <returns>The parsed int value.</returns>
        </member>
        <member name="M:Global.Http.Rest.GetBool(System.String,System.Boolean)">
            <summary>
            Gets a parameter from the request and parse it to bool.
            </summary>
            <param name="parmName">The request parameter name.</param>
            <param name="defaultValue">The default value in case the parse gives an error.</param>
            <returns>The parsed int value.</returns>
        </member>
        <member name="M:Global.Http.Rest.GetRequiredBool(System.String)">
            <summary>
            Gets a required parameter from the request and parse it to bool.
            </summary>
            <param name="parmName">The request parameter name.</param>
            <returns>The parsed int value or an exception if the parameter does not exist.</returns>
        </member>
        <member name="M:Global.Http.Rest.GetBool(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets a parameter from the request and parse it to bool.
            </summary>
            <param name="parmName">The request parameter name.</param>
            <param name="defaultValue">The default value in case the parse gives an error.</param>
            <param name="isRequired">Defines if the parameter is required.</param>
            <returns>The parsed int value or an exception if the parameter is required.</returns>
        </member>
        <member name="M:Global.Http.Rest.GetString(System.String)">
            <summary>
            Gets a string parameter from the request.
            </summary>
            <param name="parmName">The request parameter name.</param>
            <returns>The parameter value.</returns>
        </member>
        <member name="M:Global.Http.Rest.GetString(System.String,System.String)">
            <summary>
            Gets a string parameter from the request.
            </summary>
            <param name="parmName">The request parameter name.</param>
            <param name="defaultValue">A default value in case the parameter does not exist or is null or empty.</param>
            <returns>The parameter value.</returns>
        </member>
        <member name="M:Global.Http.Rest.GetRequiredString(System.String)">
            <summary>
            Gets a required string parameter from the request.
            </summary>
            <param name="parmName">The request parameter name.</param>
            <returns>The parameter value.</returns>
        </member>
        <member name="M:Global.Http.Rest.GetString(System.String,System.String,System.Boolean)">
            <summary>
            Gets a string parameter from the request.
            </summary>
            <param name="parmName">The request parameter name.</param>
            <param name="defaultValue">A default value in case the parameter does not exist or is null or empty.</param>
            <param name="isRequired">Defines if the parameter is required.</param>
            <returns>The parameter value.</returns>
        </member>
        <member name="M:Global.Http.Rest.SetBadRequest(System.String)">
            <summary>
            Throws a bad request exception.
            </summary>
            <param name="description">The exceprion description.</param>
        </member>
        <member name="T:Global.Global.Mail">
            <summary>
             Helper class that provides basic functionalities for sending mails.
            </summary>
        </member>
        <member name="M:Global.Global.Mail.#ctor">
            <summary>
             Creates a new instance of the Mail class.
            </summary>
        </member>
        <member name="M:Global.Global.Mail.#ctor(System.String)">
            <summary>
             Creates a new instance of the Mail class.
            </summary>
            <param name="host">The host from where to send the mail from.</param>
        </member>
        <member name="M:Global.Global.Mail.#ctor(System.String,System.Int32)">
            <summary>
             Creates a new instance of the Mail class.
            </summary>
            <param name="host">The host from where to send the mail from.</param>
            <param name="port">The specified port.</param>
        </member>
        <member name="M:Global.Global.Mail.From(System.String)">
            <summary>
             Defines the from address.
            </summary>
            <param name="fromMail">The from mail address.</param>
            <returns>The same instance of Mail.</returns>
        </member>
        <member name="M:Global.Global.Mail.From(System.String,System.String)">
            <summary>
             Defines the from address.
            </summary>
            <param name="fromDisplayName">The from display name.</param>
            <param name="fromMail">The from mail address.</param>
            <returns>The same instance of Mail.</returns>
        </member>
        <member name="M:Global.Global.Mail.To(System.Func{Global.Global.MailAddresses,Global.Global.MailAddresses})">
            <summary>
             Adds a collection of mail addresses to send to.
            </summary>
            <param name="mailAddresses">The specified addresses to send to.</param>
            <returns>The same instance of the mail helper class.</returns>
        </member>
        <member name="M:Global.Global.Mail.Cc(System.Func{Global.Global.MailAddresses,Global.Global.MailAddresses})">
            <summary>
             Adds a collection of mail addresses to send to.
            </summary>
            <param name="mailAddresses">The specified addresses to send to.</param>
            <returns>The same instance of the mail helper class.</returns>
        </member>
        <member name="M:Global.Global.Mail.Bcc(System.Func{Global.Global.MailAddresses,Global.Global.MailAddresses})">
            <summary>
             Adds a collection of mail addresses to send to.
            </summary>
            <param name="mailAddresses">The specified addresses to send to.</param>
            <returns>The same instance of the mail helper class.</returns>
        </member>
        <member name="M:Global.Global.Mail.Subject(System.String)">
            <summary>
             Sets the message subject.
            </summary>
            <param name="subject">The subject.</param>
            <returns>The same instance of the mail helper class.</returns>
        </member>
        <member name="M:Global.Global.Mail.Body(System.String)">
            <summary>
             Sets the message body.
            </summary>
            <param name="body">The body.</param>
            <returns>The same instance of the mail helper class.</returns>
        </member>
        <member name="M:Global.Global.Mail.SubjectEncoding(System.Text.Encoding)">
            <summary>
             Sets the message subject encoding.
            </summary>
            <param name="subjectEncoding">The subject encoding.</param>
            <returns>The same instance of the mail helper class.</returns>
        </member>
        <member name="M:Global.Global.Mail.BodyEncoding(System.Text.Encoding)">
            <summary>
             Sets the message body encoding.
            </summary>
            <param name="bodyEncoding">The body encoding.</param>
            <returns>The same instance of the mail helper class.</returns>
        </member>
        <member name="M:Global.Global.Mail.IsBodyHtml(System.Boolean)">
            <summary>
             Sets the message body as html or not.
            </summary>
            <param name="isBodyHtml">Message body html flag.</param>
            <returns>The same instance of the mail helper class.</returns>
        </member>
        <member name="M:Global.Global.Mail.Host(System.String)">
            <summary>
             The host from where to send the mail from.
            </summary>
            <param name="host">The host from where to send the mail from.</param>
            <returns>The same instance of the mail helper class.</returns>
        </member>
        <member name="M:Global.Global.Mail.Port(System.Int32)">
            <summary>
             The specified port.
            </summary>
            <param name="port">The specified port.</param>
            <returns>The same instance of the mail helper class.</returns>
        </member>
        <member name="M:Global.Global.Mail.Ssl(System.Boolean)">
            <summary>
             Specifies if ssl should be enabled.
            </summary>
            <param name="enableSsl">Flag to enable ssl.</param>
            <returns>The same instance of the mail helper class.</returns>
        </member>
        <member name="M:Global.Global.Mail.Credentials(System.String,System.String)">
            <summary>
             Defines the credentials to use from for sending the mail (NetworkCredentials).
            </summary>
            <param name="username">The specified username.</param>
            <param name="password">The specified passord.</param>
            <returns>The same instance of the mail helper class.</returns>
        </member>
        <member name="M:Global.Global.Mail.Credentials(System.String,System.String,System.String)">
            <summary>
             Defines the credentials to use from for sending the mail (NetworkCredentials).
            </summary>
            <param name="username">The specified username.</param>
            <param name="password">The specified passord.</param>
            <param name="domain">The specified domain.</param>
            <returns>The same instance of the mail helper class.</returns>
        </member>
        <member name="M:Global.Global.Mail.Attachment(System.String,System.String)">
            <summary>
            Inserts an attachement in the mail.
            </summary>
            <param name="filePath">The path of the file to be attached.</param>
            <param name="type">The of file that is being sent. Check MediaTypeNames enum for available content types.</param>
            <returns>The same instance of the mail helper class.</returns>
        </member>
        <member name="M:Global.Global.Mail.Send">
            <summary>
             Sends the specified message defined.
            </summary>
            <returns>If no error was found it returns true.</returns>
        </member>
        <member name="M:Global.Global.Mail.Dispose">
            <summary>
            Disposes the all the attachements if exist.
            </summary>
        </member>
        <member name="P:Global.Global.Mail.Message">
            <summary>
             Defines the message settings such as from, to, subject, etc. These fields will be set automatically by calling the respective methods.
            </summary>
        </member>
    </members>
</doc>
